from datetime import datetime, timedelta
import os.path
from StringIO import StringIO
import tempfile
import shutil
import unittest
import time

from trac import core
from trac.attachment import Attachment
from trac.core import TracError, implements
from trac.resource import ResourceNotFound
from trac.test import EnvironmentStub
from trac.util.datefmt import from_utimestamp, to_utimestamp, utc

from mailinglistplugin.api import MailinglistSystem
from mailinglistplugin.model import Mailinglist, Mailinglist

from nose.tools import raises

rawmsgs = ["""\
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: %(subject)s
Date: %(asctime)s
Message-Id: <%(id)s@example.com>

%(body)s
""","""\
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: %(subject)s
Date: %(asctime)s
In-Reply-to: <%(id)s@example.com>
Message-Id: <%(id)s@example.org>

%(body)s
""","""\
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: %(subject)s
Date: %(asctime)s
References: <something@example.com> <%(id)s@example.com>
Message-Id: <%(id)s@example.org>

%(body)s
""","""\
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: %(subject)s
Date: %(asctime)s
Thread-Index: %(subject)s

%(body)s
""","""\
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: Fresh %(subject)s
Date: %(asctime)s

%(body)s
""","""\
Delivery-date: Tue, 09 Nov 2010 17:08:44 +0000
From: %(sender)s <%(email)s>
To: List <%(list)s@%(domain)s>
Subject: %(subject)s
Date: %(asctime)s
Thread-Index: %(subject)s
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="liOOAslEiF7prFVr"
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)

--liOOAslEiF7prFVr
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

Body text.

--liOOAslEiF7prFVr
Content-Type: image/png
Content-Disposition: attachment; filename="Trac_Logo_512x512.png"
Content-Transfer-Encoding: base64

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
dZvlqLxQ5DTx8ea43bvTNTExWM5XKElFHCDgBAGMADgBC6LCJKDp2jVNN3OmqNYE6LR69aX+
x45N1v7iF1jOV5iXNaICAbsEMAJgFxEExECgprh4xUmd7hWhx2p76yFu794Mn4QELOcr9GQj
PhCwQwAjAHYA4bQ4CKjCwl7v/umnR4UcbSh5tz8xN3eub2IilvMVcqIRGwg4SAAjAA6Cgpjw
CVit1r4Fq1btvrp4cbTQou2xb9+JwJEjF3rI5d8KLTbEAwIg4BoB7AboGje0EiAB8lrgGWtt
7Yz6O3f+WrR2bbgQQgxLTi6PWrlysyo0dCWJr0oIMSEGEAAB9xBAAeAejtAiEAIeKtVBUgRM
9dRq37+2bFkUrWEpo6Mtcbt2ZXr36/e6rbChNQ74DQIgwBwBPAJgji00U0zAaDQmVGRmvp07
ceIA2sLosmVLTtDkySuVanUGbb7DXxAAAfYIoABgjzUsUUaAzAkIqMjJeTV/+vTpFceOKfju
fvjcuaUdlyzZqgwJeYPc9YvqtUa+5wb+gQAfCaAA4GNW4BOvCFjN5tG3MjPnG2bOfNRcWsq7
v5nwGTPKIxcv3qGKikojHf8FXsGDMyAAArwlwLsvM96SgmOiJ2A1GseWHT06pXDt2qF3Dh5U
cQ0k6rXXrummTdut1OnS0fFznQ3YBwH6CKAAoC9n8JhjAqQQSKwuKRlfumvX6KK33upsKi5m
7e8oZNKkO2EpKUe8+vffJ9do9pGOv5RjHDAPAiBAKQHWvrgo5QO3QaBNAmSOgEpSVzfYeOPG
oOozZx69/fnnPW9mZARITKY22zh7QurlJQmbOrUk6OmnT2j69j2g9Pf/knT6V53VA3kQAAEQ
aEkABUBLIvgMvu090AAAAcpJREFUAi4SIAWBrqGysr+ptHRgdVZWYtmBA3F3//nPIKPB4PCK
mxq93uL7+OO3A4YPz9b27HlSHRZ2TKLRHCedPib1uZgXNAMBEGidAAqA1rngKAi0m4DtLQKi
pJukpibC0tDgV19To5BYLFIL+d+kXCqVWiTkv1ytNkk9PcslcnmhRCbLJR1+WZMMfoIACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAA
CIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACIAACICA8Aj8P1yeG5V5XKG2AAAA
AElFTkSuQmCC

--liOOAslEiF7prFVr--


"""]

class MailinglistTestCase(unittest.TestCase):

    def setUp(self):
        self.env = EnvironmentStub()
        MailinglistSystem(self.env).environment_created()
        
    def tearDown(self):
        self.env.reset_db()

    def test_str_list(self):
        mailinglist = Mailinglist(self.env,
                                  emailaddress="list", name="Sample List", private=True,
                                  postperm="MEMBERS")
        str(mailinglist)

    def test_adding_lists(self):
        for i in range(0,10):
            mailinglist = Mailinglist(self.env,
                                      emailaddress="list%s" % i, name="Sample List", private=True,
                                      postperm="MEMBERS")
            mailinglist.insert()

    def test_removing_lists(self):
        l = []
        for i in range(0,10):
            mailinglist = Mailinglist(self.env,
                                      emailaddress="list%s" % i, name="Sample List", private=True,
                                      postperm="MEMBERS")
            mailinglist.insert()
            l.append(mailinglist.id)
            
        for i in l:
            Mailinglist(self.env, i).delete()
            
    @raises(StandardError) # would be nice to be more specific, but
                           # that depends on which db is used?
    def test_add_duplicate_lists(self):
        Mailinglist(self.env, emailaddress="list", name="Sample List", private=True,
                    postperm="MEMBERS").insert()
        Mailinglist(self.env, emailaddress="list", name="Sample List", private=True,
                    postperm="MEMBERS").insert()

    def test_load_list(self):
        mailinglist = Mailinglist(self.env,
                                  emailaddress="list", name="Sample List", private=True,
                                  postperm="MEMBERS")
        assert mailinglist.id is None
        mailinglist.insert()
        assert mailinglist.id is not None
        found = Mailinglist(self.env, mailinglist.id)
        assert found.id is mailinglist.id
        
    def test_update_private(self):
        mailinglist = Mailinglist(self.env,
                                  emailaddress="list", name="Sample List", private=True,
                                  postperm="MEMBERS")
        assert mailinglist.private == True
        newid = mailinglist.insert()
        mailinglist.private = False
        mailinglist.save_changes()
        assert Mailinglist(self.env, newid).private is False

    def test_add_messages(self):
        mailinglist = Mailinglist(self.env,
                                  emailaddress="LIST1", name="Sample List 1", private=True,
                                  postperm="MEMBERS")
        mailinglist.insert()
        mailinglist = Mailinglist(self.env,
                                  emailaddress="list2", name="Sample List 2", private=True,
                                  postperm="MEMBERS")
        mailinglist.insert()

        for rawmsg in rawmsgs:
            for listname in ("list1", "list2"):
                bytes = rawmsg % dict(sender="Jack Sparrow",
                                      email="jack@example.com",
                                      list=listname,
                                      domain="example.com",
                                      subject="Boats",
                                      asctime=time.asctime(),
                                      id="asdfasdf",
                                      body="Need boats.")

                mailinglist = Mailinglist.select_by_address(self.env,
                                                            "%s@example.com" % listname)
                message = mailinglist.insert_raw_email(bytes)
                
        assert len(list(Mailinglist.select(self.env))) == 2
        
        for mailinglist in Mailinglist.select(self.env):
            for conversation in mailinglist.conversations():
                assert conversation.get_first() is not None
                for message in conversation.messages():
                    assert message
                    for attachment in Attachment.select(self.env, 'mailinglistmessage', message.id):
                        assert attachment

            mailinglist.delete()
            
        assert len(list(Mailinglist.select(self.env))) == 0
        
